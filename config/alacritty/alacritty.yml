# Import additional configuration files ########################################
#import:
#  - /path/to/alacritty.yml
#  - ~/path/to/alacritty.yml

# Environment variables ########################################################
#env:
  # if unset, will check local terminfo and use 'alacritty' if available,
  # otherwise 'xterm-256color'
  #TERM: alacritty

# Window properties ############################################################
window:
  # requires restart: dimensions
  #                   position
  #                   padding
  #                   startup_mode

  # number of columns/lines in a window
  #dimensions:
    #columns: 0
    #lines: 0

  # position (pixel)
  #position:
  #  x: 0
  #  y: 0

  # padding scaled by DPI
  padding:
    x: 0
    y: 0

  # additional padding evenly around the terminal content (boolean)
  dynamic_padding: false

  # full: Borders and title bar
  # none: Neither borders nor title bar
  decorations: none

  # background opacity: floating point number: 0.0 (transparent) - 1.0 (opaque)
  opacity: 1.0

  # Windowed
  # Maximized
  # Fullscreen
  startup_mode: Maximized

  #title: Alacritty

  # allow terminal applications to change window title
  dynamic_title: true

  #class:
    # Application instance name
    #instance: Alacritty
    # General application class
    #general: Alacritty

  # dark
  # light
  # None (default theme variant)
  #gtk_theme_variant: None

# Scrolling ####################################################################
#scrolling:
  #history: 10000
  # scrolling distance multiplier
  #multiplier: 3

# Font configuration ###########################################################
#font:
  #normal:
    #family: monospace
    #style: Regular
  #bold:
    #family: monospace
    #style: Bold
  #italic:
    #family: monospace
    #style: Italic
  #bold_italic:
    #family: monospace
    #style: Bold Italic

  # Point size
  #size: 11.0

  # offset.x: letter spacing
  # offset.y: line spacing
  #offset:
    #x: 0
    #y: 0

  # offset of glyphs in their cells, origin is in the bottom left
  #glyph_offset:
  #  x: 0
  #  y: 0

  # true: use a custom built-in font for box drawing characters
  # (Unicode points 2500 - 259f)
  #builtin_box_drawing: true

#draw_bold_text_with_bright_colors: false

# Colours ######################################################################
#colors:
  #primary:
    #background: '#1d1f21'
    #foreground: '#c5c8c6'
    #dim_foreground: '#828482'
    #bright_foreground: '#eaeaea'

  # CellForeground
  # CellBackground
  # hexadecimal colours like #ff00ff
  #cursor:
    #text: CellBackground
    #cursor: CellForeground

  # CellForeground
  # CellBackground
  # hexadecimal colours like #ff00ff
  #vi_mode_cursor:
    #text: CellBackground
    #cursor: CellForeground

  #search:
    # CellForeground
    # CellBackground
    # hexadecimal colours like #ff00ff
    #matches:
      #foreground: '#000000'
      #background: '#ffffff'
    #focused_match:
      #foreground: '#ffffff'
      #background: '#000000'

    #bar:
      #background: '#c5c8c6'
      #foreground: '#1d1f21'

  # Keyboard regex hints
  #hints:
    # First character in the hint label
    # CellForeground
    # CellBackground
    # hexadecimal colours like #ff00ff
    #start:
      #foreground: '#1d1f21'
      #background: '#e9ff5e'

    # All characters after the first one in the hint label
    # CellForeground
    # CellBackground
    # hexadecimal colours like #ff00ff
    #end:
      #foreground: '#e9ff5e'
      #background: '#1d1f21'

  # default: opposing primary colour
  #line_indicator:
    #foreground: None
    #background: None

  # CellForeground
  # CellBackground
  # hexadecimal colours like #ff00ff
  #selection:
    #text: CellBackground
    #background: CellForeground

  #normal:
    #black:   '#1d1f21'
    #red:     '#cc6666'
    #green:   '#b5bd68'
    #yellow:  '#f0c674'
    #blue:    '#81a2be'
    #magenta: '#b294bb'
    #cyan:    '#8abeb7'
    #white:   '#c5c8c6'

  #bright:
    #black:   '#666666'
    #red:     '#d54e53'
    #green:   '#b9ca4a'
    #yellow:  '#e7c547'
    #blue:    '#7aa6da'
    #magenta: '#c397d8'
    #cyan:    '#70c0b1'
    #white:   '#eaeaea'

  #dim:
    #black:   '#131415'
    #red:     '#864343'
    #green:   '#777c44'
    #yellow:  '#9e824c'
    #blue:    '#556a7d'
    #magenta: '#75617b'
    #cyan:    '#5b7d78'
    #white:   '#828482'

  # include all colors from 16 to 256, example:
  #   `- { index: 16, color: '#ff00ff' }`
  #indexed_colors: []

  # true: cells will be transparent regardless of window.opacity or background
  #       colour
  #transparent_background_colors: false

# Bell #########################################################################
# when BEL control character is received
#bell:
  # Ease
  # EaseOut
  # EaseOutSine
  # EaseOutQuad
  # EaseOutCubic
  # EaseOutQuart
  # EaseOutQuint
  # EaseOutExpo
  # EaseOutCirc
  # Linear
  #animation: EaseOutExpo

  #duration: 0

  #color: '#ffffff'

  # command:
  #   program: notify-send
  #   args: ["BEL received"]
  #command: None

# Selection ####################################################################
#selection:
  # separators for "semantic words"
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # true: selection will be copied to primary clipboard
  #save_to_clipboard: false

# Cursor #######################################################################
#cursor:
  #style:
    # ▇ Block
    # _ Underline
    # | Beam
    #shape: Block

    # Never: Prevent the cursor from ever blinking
    # Off: Disable blinking by default
    # On: Enable blinking by default
    # Always: Force the cursor to always blink
    #blinking: Off

  #vi_mode_style: None

  # blinking interval in milliseconds
  #blink_interval: 750

  # true: render cursor as hollow box when window is not focused
  #unfocused_hollow: true

  # thickness relative to cell width as floating point number: `0.0` to `1.0`
  #thickness: 0.15

# Live config reload ###########################################################
# requires restart
live_config_reload: true

# Shell ########################################################################
# `shell.args` are passed unmodified as arguments to the shell
# Default: user login shell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# directory the shell is started in
# if unset or `None`, use directory of parent process
#working_directory: None

# send ESC (\x1b) before characters when alt is pressed
alt_send_esc: true

# offer IPC using `alacritty msg`
#ipc_socket: true

# Mouse ########################################################################
#mouse:
  # waiting time to register multiple clicks
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  #hide_when_typing: false

# Regex hints ##################################################################
#hints:
  # keys used for the hint labels
  #alphabet: "jfkdls;ahgurieowpq"

  # hints must have a `regex` and either an `action` or a `command` field
  # optional fields: `mouse`, `binding`, `post_processing`
  #
  # `command`, `binding.key`, `binding.mods`, `binding.mode`, `mouse.mods`
  # accept the same values as they do in the `key_bindings` section
  #
  # mouse.enabled:   underline the hint while the mouse with all `mouse.mods`
  #                  keys held or the vi mode cursor is above it
  # post_processing: use heuristics to shorten the match if there are characters
  #                  likely not to be part of the hint (e.g. a trailing `.`)

  # Values for `action`:
  # Copy:             copy the hint's text to the clipboard
  # Paste:            paste the hint's text to the terminal or search
  # Select:           select the hint's text
  # MoveViModeCursor: move the vi mode cursor to the beginning of the hint

  #enabled:
  # - regex: "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)\
  #           [^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"
  #   command: xdg-open
  #   post_processing: true
  #   mouse:
  #     enabled: true
  #     mods: None
  #   binding:
  #     key: U
  #     mods: Control|Shift

# Mouse bindings ###############################################################
# `Shift` modifier is automatically added as a requirement
# each binding specifies: mouse, action, mods (optional)
# mouse:  Left, Middle, Right, numeric identifier
# action: see key bindings
#         ExpandSelection: expand selection to current mouse cursor location
# mods:   see key bindings
#mouse_bindings:
#  - { mouse: Right,                 action: ExpandSelection }
#  - { mouse: Right,  mods: Control, action: ExpandSelection }
#  - { mouse: Middle, mode: ~Vi,     action: PasteSelection  }

# Key bindings #################################################################
# each binding specifies: key and exactly one of chars
#                                                action
#                                                command
#                         optional: mods, mode

# key:     identifier of the key pressed
#          A-Z, F1-F24, Key0-Key9
#          scancodes optained via `showkey --scancodes`
# chars:   send byte sequence to the running application, allows to pass escape
#          sequences
# action:  Execute a predefined action, namely:
#          ToggleViMode
#          SearchForward:      start searching toward the right of search origin
#          SearchBackward:     start searching toward the left of search origin
#          Copy
#          Paste
#          IncreaseFontSize
#          DecreaseFontSize
#          ResetFontSize
#          ScrollPageUp
#          ScrollPageDown
#          ScrollHalfPageUp
#          ScrollHalfPageDown
#          ScrollLineUp
#          ScrollLineDown
#          ScrollToTop
#          ScrollToBottom
#          ClearHistory:       remove the terminal's scrollback history
#          Hide:               hide the Alacritty window
#          Minimize:           minimise the Alacritty window
#          Quit:               quit Alacritty
#          ToggleFullscreen
#          SpawnNewInstance:   spawn a new instance of Alacritty
#          CreateNewWindow:    create new Alacritty window from current process
#          ClearLogNotice:     clear Alacritty's UI warning and error notice
#          ClearSelection:     remove the active selection
#          ReceiveChar
#          None
#
#          Vi mode exclusive actions:
#          Open:                    perform action of first matching hint under
#                                   the vi mode cursor with `mouse.enabled` set
#                                   to `true`
#          ToggleNormalSelection
#          ToggleLineSelection
#          ToggleBlockSelection
#          ToggleSemanticSelection: toggle semantic selection based on
#                                   `selection.semantic_escape_chars`
#
#          Vi mode exclusive cursor motion actions:
#          Up:               one line up
#          Down:             one line down
#          Left:             one character left
#          Right:            one character right
#          First:            first column or beginning of the line when already
#                            at the first column
#          Last:             last column or beginning of the line when already
#                            at the last column
#          FirstOccupied:    first non-empty cell in this terminal row or first
#                            non-empty cell of the line when already at the
#                            first cell of the row
#          High:             top of the screen
#          Middle:           center of the screen
#          Low:              bottom of the screen
#          SemanticLeft:     start of the previous semantically separated word
#          SemanticRight:    start of the next semantically separated word
#          SemanticLeftEnd:  end of the previous semantically separated word
#          SemanticRightEnd: end of the next semantically separated word
#          WordLeft:         start of the previous whitespace separated word
#          WordRight:        start of the next whitespace separated word
#          WordLeftEnd:      end of the previous whitespace separated word
#          WordRightEnd:     end of the next whitespace separated word
#          Bracket:          character matching the bracket at cursor's location
#          SearchNext:       beginning of the next match
#          SearchPrevious:   beginning of the previous match
#          SearchStart:      start of the match to the left of vi mode cursor
#          SearchEnd:        end of the match to the right of vi mode cursor
#
#          Search mode exclusive actions:
#          SearchFocusNext:       move the focus to the next search match
#          SearchFocusPrevious:   move the focus to the previous search match
#          SearchConfirm
#          SearchCancel
#          SearchClear:           reset the search regex
#          SearchDeleteWord:      delete the last word in the search regex
#          SearchHistoryPrevious: go to the previous regex in the search history
#          SearchHistoryNext:     go to the next regex in the search history
#
#          CopySelection:  copy from the selection buffer
#          PasteSelection: paste from the selection buffer
#
# command: fork and execute a specified command plus arguments
#          must be a map containing a `program` string and an `args` array of
#          command line parameter strings
#          `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# mods: key modifiers to filter binding actions, can be combined with '|'
#       whitespace and capitalisation are relevant
#       Command
#       Control
#       Option
#       Super
#       Shift
#       Alt
#       `mods: Control|Shift`
#
# mode: indicate a binding for only specific terminal reported modes
#       mainly used to send correct escape sequences when in different modes
#       '~' can be used before a mode to negate it
#       AppCursor
#       AppKeypad
#       Search
#       Alt
#       Vi
#
# bindings are filled by default, but will be replaced when a new binding with
# the same triggers is defined
# to unset a default binding, it can be mapped to the `ReceiveChar` action
# alternatively: `None` for a no-op to not receive input characters
#
# If the same trigger is assigned to multiple actions, all of them are executed
# in the order they were defined in.
key_bindings:
  #- {key: Left, mods: Alt, chars: "\eb"}
  #- {key: Right, mods: Alt, chars: "\ef"}
  - { key: A,         mods: Alt,       chars: "\x1ba"  }
  - { key: B,         mods: Alt,       chars: "\x1bb"  }
  - { key: C,         mods: Alt,       chars: "\x1bc"  }
  - { key: D,         mods: Alt,       chars: "\x1bd"  }
  - { key: E,         mods: Alt,       chars: "\x1be"  }
  - { key: F,         mods: Alt,       chars: "\x1bf"  }
  - { key: G,         mods: Alt,       chars: "\x1bg"  }
  - { key: H,         mods: Alt,       chars: "\x1bh"  }
  - { key: I,         mods: Alt,       chars: "\x1bi"  }
  - { key: J,         mods: Alt,       chars: "\x1bj"  }
  - { key: K,         mods: Alt,       chars: "\x1bk"  }
  - { key: L,         mods: Alt,       chars: "\x1bl"  }
  - { key: M,         mods: Alt,       chars: "\x1bm"  }
  - { key: N,         mods: Alt,       chars: "\x1bn"  }
  - { key: O,         mods: Alt,       chars: "\x1bo"  }
  - { key: P,         mods: Alt,       chars: "\x1bp"  }
  - { key: Q,         mods: Alt,       chars: "\x1bq"  }
  - { key: R,         mods: Alt,       chars: "\x1br"  }
  - { key: S,         mods: Alt,       chars: "\x1bs"  }
  - { key: T,         mods: Alt,       chars: "\x1bt"  }
  - { key: U,         mods: Alt,       chars: "\x1bu"  }
  - { key: V,         mods: Alt,       chars: "\x1bv"  }
  - { key: W,         mods: Alt,       chars: "\x1bw"  }
  - { key: X,         mods: Alt,       chars: "\x1bx"  }
  - { key: Y,         mods: Alt,       chars: "\x1by"  }
  - { key: Z,         mods: Alt,       chars: "\x1bz"  }
  - { key: A,         mods: Alt|Shift, chars: "\x1bA"  }
  - { key: B,         mods: Alt|Shift, chars: "\x1bB"  }
  - { key: C,         mods: Alt|Shift, chars: "\x1bC"  }
  - { key: D,         mods: Alt|Shift, chars: "\x1bD"  }
  - { key: E,         mods: Alt|Shift, chars: "\x1bE"  }
  - { key: F,         mods: Alt|Shift, chars: "\x1bF"  }
  - { key: G,         mods: Alt|Shift, chars: "\x1bG"  }
  - { key: H,         mods: Alt|Shift, chars: "\x1bH"  }
  - { key: I,         mods: Alt|Shift, chars: "\x1bI"  }
  - { key: J,         mods: Alt|Shift, chars: "\x1bJ"  }
  - { key: K,         mods: Alt|Shift, chars: "\x1bK"  }
  - { key: L,         mods: Alt|Shift, chars: "\x1bL"  }
  - { key: M,         mods: Alt|Shift, chars: "\x1bM"  }
  - { key: N,         mods: Alt|Shift, chars: "\x1bN"  }
  - { key: O,         mods: Alt|Shift, chars: "\x1bO"  }
  - { key: P,         mods: Alt|Shift, chars: "\x1bP"  }
  - { key: Q,         mods: Alt|Shift, chars: "\x1bQ"  }
  - { key: R,         mods: Alt|Shift, chars: "\x1bR"  }
  - { key: S,         mods: Alt|Shift, chars: "\x1bS"  }
  - { key: T,         mods: Alt|Shift, chars: "\x1bT"  }
  - { key: U,         mods: Alt|Shift, chars: "\x1bU"  }
  - { key: V,         mods: Alt|Shift, chars: "\x1bV"  }
  - { key: W,         mods: Alt|Shift, chars: "\x1bW"  }
  - { key: X,         mods: Alt|Shift, chars: "\x1bX"  }
  - { key: Y,         mods: Alt|Shift, chars: "\x1bY"  }
  - { key: Z,         mods: Alt|Shift, chars: "\x1bZ"  }
  - { key: Key1,      mods: Alt,       chars: "\x1b1"  }
  - { key: Key2,      mods: Alt,       chars: "\x1b2"  }
  - { key: Key3,      mods: Alt,       chars: "\x1b3"  }
  - { key: Key4,      mods: Alt,       chars: "\x1b4"  }
  - { key: Key5,      mods: Alt,       chars: "\x1b5"  }
  - { key: Key6,      mods: Alt,       chars: "\x1b6"  }
  - { key: Key7,      mods: Alt,       chars: "\x1b7"  }
  - { key: Key8,      mods: Alt,       chars: "\x1b8"  }
  - { key: Key9,      mods: Alt,       chars: "\x1b9"  }
  - { key: Key0,      mods: Alt,       chars: "\x1b0"  }
  - { key: Space,     mods: Control,   chars: "\x00"   } # Ctrl + Space
  - { key: Grave,     mods: Alt,       chars: "\x1b`"  } # Alt + `
  - { key: Grave,     mods: Alt|Shift, chars: "\x1b~"  } # Alt + ~
  - { key: Period,    mods: Alt,       chars: "\x1b."  } # Alt + .
  - { key: 7,         mods: Alt|Shift, chars: "\x1b\\" } # Alt + *
  - { key: Key8,      mods: Alt|Shift, chars: "\x1b*"  } # Alt + *
  - { key: Key3,      mods: Alt|Shift, chars: "\x1b#"  } # Alt + #
  - { key: Period,    mods: Alt|Shift, chars: "\x1b>"  } # Alt + >
  - { key: Comma,     mods: Alt|Shift, chars: "\x1b<"  } # Alt + <
  - { key: Minus,     mods: Alt|Shift, chars: "\x1b_"  } # Alt + _
  - { key: Key5,      mods: Alt|Shift, chars: "\x1b%"  } # Alt + %
  - { key: Key6,      mods: Alt|Shift, chars: "\x1b^"  } # Alt + ^
  - { key: Backslash, mods: Alt,       chars: "\x1b\\" } # Alt + \
  - { key: Backslash, mods: Alt|Shift, chars: "\x1b|"  } # Alt + |
  #- {key: Left, mods: Control, chars: "\eb"}
  #- {key: Right, mods: Control, chars: "\ef"}
  #- { key: Paste,                                       action: Paste          }
  #- { key: Copy,                                        action: Copy           }
  #- { key: L,         mods: Control,                    action: ClearLogNotice }
  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop,   }
  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

  # Vi Mode
  #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
  #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  #- { key: Y,                           mode: Vi|~Search, action: Copy                    }
  #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  #- { key: Return,                      mode: Vi|~Search, action: Open                    }
  #- { key: K,                           mode: Vi|~Search, action: Up                      }
  #- { key: J,                           mode: Vi|~Search, action: Down                    }
  #- { key: H,                           mode: Vi|~Search, action: Left                    }
  #- { key: L,                           mode: Vi|~Search, action: Right                   }
  #- { key: Up,                          mode: Vi|~Search, action: Up                      }
  #- { key: Down,                        mode: Vi|~Search, action: Down                    }
  #- { key: Left,                        mode: Vi|~Search, action: Left                    }
  #- { key: Right,                       mode: Vi|~Search, action: Right                   }
  #- { key: Key0,                        mode: Vi|~Search, action: First                   }
  #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  #- { key: N,                           mode: Vi|~Search, action: SearchNext              }
  #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

  # Search Mode
  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  #- { key: Escape,                mode: Search,     action: SearchCancel          }
  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

# Debug ########################################################################
#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false
